class Solution {
public:
    int majorityElement(vector<int>& nums) {
        map<int,int>q;
        for(int i=0;i<nums.size();i++){
            q[nums[i]]++;
            if(q[nums[i]]>nums.size()/2)  return nums[i];
        }
    }
};
/*
找出数组中出现次数超过n/2的元素是什么。
写了一个时间空间全是n的解法，，看了discuss才知道时间n，空间1的解法，好屌

*/
int majorityElement(int* nums, int numsSize) {
    int ans=nums[0],cnt=1;
    for(int i=1;i<numsSize;i++){
        if(cnt==0){
            cnt=1;
            ans=nums[i];
        }
        else if(nums[i]==ans){
            cnt++;
        }
        else cnt--;
    }
    return ans;
}
