int rob(int* nums, int numsSize) {
    if(!numsSize) return 0;
    int t1=0,t2=nums[0],ans=nums[0];
    for(int i=1;i<numsSize;i++){
        ans=(t1+nums[i])>t2?(t1+nums[i]):t2;
        t1=t2;
        t2=ans;
    }
    return ans;
}

/*
  dp[i] means that for first i house , we can get the max value is dp[i]
  then we can get that  dp[i]=max(dp[i-1],dp[i-2]+nums[i]);
  and we don't need to store the whole dp array,we just need the i-1 and i-2 this two value..so we just use two integers.
  233
*/
